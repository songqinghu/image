<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kuaikanwang.image.dao.ImageAccessMapper" >

  <resultMap id="BaseResultMap" type="com.kuaikanwang.image.domain.result.ImageList" >
    <id column="pre_id" property="pid" jdbcType="INTEGER" />
    <result column="pictype" property="pictype" jdbcType="VARCHAR" />
    <result column="name" property="picName" jdbcType="VARCHAR" />
    <result column="cratedate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="id" property="mid" jdbcType="INTEGER" />
    <result column="murl" property="picUrl" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="IndexResultMap" type="com.kuaikanwang.image.domain.result.ImageList" >
    <id column="pre_id" property="pid" jdbcType="INTEGER" />
    <result column="name" property="picName" jdbcType="VARCHAR" />
    <result column="url" property="picUrl" jdbcType="VARCHAR" />
    <result column="lookcount" property="lookcount" jdbcType="INTEGER" />
  </resultMap>

  <select id="getTotalPage" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
   select count(c)  from ( SELECT
	count(p.pre_id) c
	FROM
		prepic p,
	    mainpic m
	WHERE
		p.pre_id = m.pre_id
	AND p.pictype = #{pictype}
	AND p.flag = 0
	GROUP BY
		p.url) s;
  </select>
  <select id="getImageList" parameterType="com.kuaikanwang.image.domain.query.ImageQuery" resultMap="BaseResultMap" >

    SELECT
	p.pre_id,
	p.pictype,
	p.`name`,
	p.cratedate,
	m.id,
	p.murl
	FROM
		prepic p,
	    mainpic m
	WHERE
		p.pre_id = m.pre_id
	AND p.pictype = #{pictype}
	AND p.flag = 0
	GROUP BY
		p.url
	order by p.pre_id desc
	LIMIT #{start},#{rows};
  </select>

  <select id="findDetailTotalCount" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
  	select count(url) from mainpic where pre_id = #{pid};
  </select>

     <select id="getDetailImage" parameterType="map" resultType="com.kuaikanwang.image.domain.result.DetailImage" >
  			select id,pre_id as pid ,`name` as picName,url as picUrl,cratedate as createDate,pictype  
  			from mainpic
  		    where pre_id = #{pid} limit #{pageNum},1 ;
 	 </select>

	  <select id="getImageCountNum"  resultType="java.lang.Integer" >
  			select count(1) from mainpic where flag =0;
  	  </select>
	
	  <select id="findImageByPage"  parameterType="com.kuaikanwang.image.domain.query.ImageQuery" resultType="com.kuaikanwang.image.domain.result.AppImageInfo" >
  			select name,url from mainpic where flag =0 order by cratedate desc limit #{start},#{rows};
  	  </select>
  	  <!-- 确定详情页有图片 -->
	  <select id="getLatestPicList"  parameterType="java.lang.Integer" resultMap="BaseResultMap" >
  			    SELECT
				p.pre_id,
				p.pictype,
				p.`name`,
				p.cratedate,
				m.id
				FROM
					prepic p,
				    mainpic m
				WHERE
					p.pre_id = m.pre_id
				AND p.flag = 0
				GROUP BY
					p.url
				order by p.cratedate desc limit 0,#{num};
  	  </select>
	
	  <select id="findPreInfoByPid"  parameterType="java.lang.Long" resultType="java.lang.Integer" >
  			select count(1) from mainpic where pre_id = #{pid};
  	  </select>

		
  	  <!--  按照 浏览量进行排序  -->
	  <select id="getCountPicList"  parameterType="java.lang.Integer" resultMap="BaseResultMap" >
			SELECT
				p.pre_id,
				p.pictype,
				p.`name`
			FROM
				prepic p,
				pretimecount m
			WHERE
				p.pre_id = m.pre_id
			AND p.flag = 0
			GROUP BY
				p.url
			ORDER BY
				m.lookcount DESC
			LIMIT 0,
			 #{num};
  	  </select>

  <select id="getImageListByPid" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    SELECT
	p.pre_id,
	p.pictype,
	p.`name`,
	p.cratedate,
	m.id,
	p.murl
	FROM
		prepic p,
	    mainpic m
	WHERE
		p.pre_id = m.pre_id
	AND p.pictype = #{pictype}
	AND p.flag = 0
  and p.pre_id = #{pid}
	GROUP BY
		p.url
  </select>
  <!-- 获取分类上一张图片 -->
  <select id="getPreviousImageByPid" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
   SELECT
	p.pre_id,
	p.pictype,
	p.`name`,
	p.cratedate,
	m.id,
	p.murl
	FROM
		prepic p,
	    mainpic m
	WHERE
		p.pre_id = m.pre_id
	AND p.pictype = #{pictype}
	AND p.flag = 0
  and 
	p.pre_id > #{pid}
	GROUP BY
		p.url
  order by p.pre_id limit 0,1 ;

  </select>
  <!-- 获取分类下一张图片 -->
  <select id="getNextImageByPid" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
  SELECT
	p.pre_id,
	p.pictype,
	p.`name`,
	p.cratedate,
	m.id,
	p.murl
	FROM
		prepic p,
	    mainpic m
	WHERE
		p.pre_id = m.pre_id
	AND p.pictype = #{pictype}
	AND p.flag = 0
  and 
	p.pre_id  &lt; #{pid}
	GROUP BY
		p.url
  order by p.pre_id desc limit 0,1 ;

  </select>

	  <select id="getMaxPid"  resultType="java.lang.Integer" >
  			select pre_id from prepic where flag =0 order by pre_id desc limit 0,1;
  	  </select>

  <select id="getRecommendImageList" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
      SELECT
	p.pre_id,
	p.pictype,
	p.`name`,
	p.cratedate,
	m.id,
	p.murl
	FROM
		prepic p,
	  mainpic m
	WHERE
		p.pre_id = m.pre_id
	AND p.flag = 0
    and 	p.pre_id > #{pid}
	GROUP BY
		p.url
	order by p.pre_id asc
 limit 0,10

  </select>
  
  <select id="getIndexImageListByType" parameterType="java.lang.Integer" resultMap="IndexResultMap" >
		SELECT
			m.pre_id,
			m.`name`,
			m.url,
			p.lookcount
		FROM
			mainpic m,
			pretimecount p
		WHERE
			m.pre_id = p.pre_id
		AND m.pictype = #{pictype}
		GROUP BY
			p.pre_id
		ORDER BY
			p.lookcount DESC
		LIMIT 0,
		 4;
  </select>
  <select id="getImageShowCountByImageType" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
		select count(1) from mainpic where pictype = #{imageType} and flag = 0;
  </select>


  <select id="findMWebImageList" parameterType="com.kuaikanwang.image.domain.query.ImageQuery" resultMap="IndexResultMap" >
		SELECT
			m.pre_id,
			m.`name`,
			m.url
		FROM
			mainpic m
		WHERE			
		 m.pictype = #{pictype}
		 AND m.flag = 0
    order by m.pre_id asc
    LIMIT #{start},#{rows};
  </select>

  <select id="findImageListByPid" parameterType="java.lang.Long" resultMap="IndexResultMap" >
		select pre_id ,`name`,url from mainpic where pre_id =#{pid};
  </select>
<!--   <resultMap id="BaseResultMap" type="com.taobao.pojo.TbContentCategory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="sort_order" property="sortOrder" jdbcType="INTEGER" />
    <result column="is_parent" property="isParent" jdbcType="BIT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, parent_id, name, status, sort_order, is_parent, created, updated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.taobao.pojo.TbContentCategoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_content_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_content_category
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_content_category
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.taobao.pojo.TbContentCategoryExample" >
    delete from tb_content_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taobao.pojo.TbContentCategory" >
  	<selectKey keyProperty="id" resultType="long" order="AFTER">
  		select LAST_INSERT_ID()
  	</selectKey>
    insert into tb_content_category (id, parent_id, name, 
      status, sort_order, is_parent, 
      created, updated)
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{sortOrder,jdbcType=INTEGER}, #{isParent,jdbcType=BIT}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.taobao.pojo.TbContentCategory" >
  	<selectKey keyProperty="id" resultType="long" order="AFTER">
  		select LAST_INSERT_ID()
  	</selectKey>
    insert into tb_content_category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="isParent != null" >
        is_parent,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isParent != null" >
        #{isParent,jdbcType=BIT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taobao.pojo.TbContentCategoryExample" resultType="java.lang.Integer" >
    select count(*) from tb_content_category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_content_category
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.sortOrder != null" >
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.isParent != null" >
        is_parent = #{record.isParent,jdbcType=BIT},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_content_category
    set id = #{record.id,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      is_parent = #{record.isParent,jdbcType=BIT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taobao.pojo.TbContentCategory" >
    update tb_content_category
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isParent != null" >
        is_parent = #{isParent,jdbcType=BIT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taobao.pojo.TbContentCategory" >
    update tb_content_category
    set parent_id = #{parentId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      is_parent = #{isParent,jdbcType=BIT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update> -->
</mapper>